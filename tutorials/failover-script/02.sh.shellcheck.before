
[1mIn 02.sh line 9:[0m
[0mpard=$4[0m
[33m^--^ SC2034 (warning): pard appears unused. Verify use (or export if used externally).[0m


[1mIn 02.sh line 12:[0m
[0mcurl=`whereis curl|awk '{ print $2 }'`[0m
[32m     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
curl=$(whereis curl|awk '{ print $2 }')


[1mIn 02.sh line 13:[0m
[0mif [ $? -ne 0 ] ; then echo "Curl is not properly configured" ; exit 1 ; fi[0m
[32m     ^-- SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.[0m


[1mIn 02.sh line 20:[0m
[0mecho $para | grep -E "\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b" > /dev/null 2>&1[0m
[32m     ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
echo "$para" | grep -E "\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b" > /dev/null 2>&1


[1mIn 02.sh line 23:[0m
[0mif [ $? -eq 0 ][0m
[32m     ^-- SC2181 (style): Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.[0m


[1mIn 02.sh line 36:[0m
[0m                if [ -z "$parc"  -a "$parb" == "set" ] ; then echo "You have to specify the IP address of the failover server" ; exit 1 ; fi[0m
[33m                                 ^-- SC2166 (warning): Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.[0m


[1mIn 02.sh line 40:[0m
[0m                read user[0m
[32m                ^--^ SC2162 (info): read without -r will mangle backslashes.[0m


[1mIn 02.sh line 42:[0m
[0m                read pass[0m
[32m                ^--^ SC2162 (info): read without -r will mangle backslashes.[0m


[1mIn 02.sh line 48:[0m
[0mresources=`cat $resourcedir/* | grep "resource" | awk '{ print $2 }'`[0m
[32m          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
resources=$(cat $resourcedir/* | grep "resource" | awk '{ print $2 }')


[1mIn 02.sh line 50:[0m
[0mif [ $? -ne 0 ][0m
[32m     ^-- SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.[0m


[1mIn 02.sh line 57:[0m
[0mif [ -z $para ][0m
[32m        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
if [ -z "$para" ]


[1mIn 02.sh line 61:[0m
[0m                echo $resources[0m
[32m                     ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                echo "$resources"


[1mIn 02.sh line 65:[0m
[0mecho $resources | grep $para > /dev/null[0m
[32m     ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
echo "$resources" | grep "$para" > /dev/null


[1mIn 02.sh line 67:[0m
[0mif [ $? -ne 0 ][0m
[32m     ^-- SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.[0m


[1mIn 02.sh line 71:[0m
[0m                echo $resources[0m
[32m                     ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                echo "$resources"


[1mIn 02.sh line 75:[0m
[0m        ip=`cat $resourcedir/$para | grep "^ip" | awk '{ print $2 }'`[0m
[32m           ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                             ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        ip=$(cat $resourcedir/"$para" | grep "^ip" | awk '{ print $2 }')


[1mIn 02.sh line 77:[0m
[0m        user=`cat $resourcedir/$para | grep "user" | awk '{ print $2 }'`[0m
[32m             ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        user=$(cat $resourcedir/"$para" | grep "user" | awk '{ print $2 }')


[1mIn 02.sh line 78:[0m
[0m        pass=`cat $resourcedir/$para | grep "password" | awk '{ print $2 }'`[0m
[32m             ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        pass=$(cat $resourcedir/"$para" | grep "password" | awk '{ print $2 }')


[1mIn 02.sh line 87:[0m
[0m        get=`$curl -s -u $user:$pass $uri/$ip`[0m
[32m            ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                          ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        get=$($curl -s -u "$user":"$pass" $uri/"$ip")


[1mIn 02.sh line 91:[0m
[0m                        echo $get[0m
[32m                             ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                        echo "$get"


[1mIn 02.sh line 101:[0m
[0m                        echo $get[0m
[32m                             ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                        echo "$get"


[1mIn 02.sh line 105:[0m
[0m        yamlip=`echo "$get" | grep "^  ip" | awk '{ print $2 }'`[0m
[32m               ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        yamlip=$(echo "$get" | grep "^  ip" | awk '{ print $2 }')


[1mIn 02.sh line 106:[0m
[0m        yamlserverip=`echo "$get" | grep "^  server_ip" | awk '{ print $2 }'`[0m
[32m                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        yamlserverip=$(echo "$get" | grep "^  server_ip" | awk '{ print $2 }')


[1mIn 02.sh line 107:[0m
[0m        yamlactiveip=`echo "$get" | grep "^  active_server_ip" | awk '{print $2 }'`[0m
[32m                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        yamlactiveip=$(echo "$get" | grep "^  active_server_ip" | awk '{print $2 }')


[1mIn 02.sh line 114:[0m
[0m                then echo "the configured failover server(s) is/are: `cat $resourcedir/$para | grep "^failover_ip" | sed -e 's/failover_ip //g'`" ; fi[0m
[32m                                                                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                                                                       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                then echo "the configured failover server(s) is/are: $(cat $resourcedir/"$para" | grep "^failover_ip" | sed -e 's/failover_ip //g')" ; fi


[1mIn 02.sh line 119:[0m
[0m  if [ -z $parc ][0m
[32m          ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  if [ -z "$parc" ]


[1mIn 02.sh line 122:[0m
[0m                echo "the configured failover server(s) is/are: `cat $resourcedir/$para | grep "^failover_ip" | sed -e 's/failover_ip //g'`"[0m
[32m                                                                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                                                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                echo "the configured failover server(s) is/are: $(cat $resourcedir/"$para" | grep "^failover_ip" | sed -e 's/failover_ip //g')"


[1mIn 02.sh line 127:[0m
[0m        set=`$curl -s -u $user:$pass $uri/$ip -d active_server_ip=$parc`[0m
[32m            ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                          ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        set=$($curl -s -u "$user":"$pass" $uri/"$ip" -d active_server_ip="$parc")


[1mIn 02.sh line 151:[0m
[0m                        yamlip=`echo "$set" | grep "^  ip" | awk '{ print $2 }'`[0m
[32m                               ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
                        yamlip=$(echo "$set" | grep "^  ip" | awk '{ print $2 }')


[1mIn 02.sh line 152:[0m
[0m                        yamlserverip=`echo "$set" | grep "^  server_ip" | awk '{ print $2 }'`[0m
[32m                                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
                        yamlserverip=$(echo "$set" | grep "^  server_ip" | awk '{ print $2 }')


[1mIn 02.sh line 153:[0m
[0m                        yamlactiveip=`echo "$set" | grep "^  active_server_ip" | awk '{ print $2 }'`[0m
[32m                                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
                        yamlactiveip=$(echo "$set" | grep "^  active_server_ip" | awk '{ print $2 }')


[1mIn 02.sh line 160:[0m
[0m                                then echo "the configured failover server(s) is/are: `cat $resourcedir/$para | grep "^failover_ip" | sed -e 's/failover_ip //g'`" ; fi[0m
[32m                                                                                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                                                                                       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                                then echo "the configured failover server(s) is/are: $(cat $resourcedir/"$para" | grep "^failover_ip" | sed -e 's/failover_ip //g')" ; fi


[1mIn 02.sh line 167:[0m
[0m        script=`grep "script" $resourcedir/$para | awk '{ print $2 }'`[0m
[32m               ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                           ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        script=$(grep "script" $resourcedir/"$para" | awk '{ print $2 }')


[1mIn 02.sh line 174:[0m
[0m        elif [ -x $script ][0m
[32m                  ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        elif [ -x "$script" ]


[1mIn 02.sh line 176:[0m
[0m                        ./$0 $para set $parc[0m
[32m                          ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                             ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
                        ./"$0" "$para" set "$parc"


[1mIn 02.sh line 177:[0m
[0m                        if [ $? = 0 ] ; then $script ; else exit 1 ; fi[0m
[32m                             ^-- SC2181 (style): Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.[0m


[1mIn 02.sh line 178:[0m
[0m        elif [ -f $script ][0m
[32m                  ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        elif [ -f "$script" ]


[1mIn 02.sh line 185:[0m
[0m        if [ -n $parb ][0m
[31m                ^---^ SC2070 (error): -n doesn't work with unquoted arguments. Quote or use [[ ]].[0m
[32m                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        if [ -n "$parb" ]

For more information:
  https://www.shellcheck.net/wiki/SC2070 -- -n doesn't work with unquoted arg...
  https://www.shellcheck.net/wiki/SC2034 -- pard appears unused. Verify use (...
  https://www.shellcheck.net/wiki/SC2166 -- Prefer [ p ] && [ q ] as [ p -a q...
